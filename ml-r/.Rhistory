train[,(cat_var) := lapply(.SD, as.factor), .SDcols = cat_var]
cat_var <- names(train)[which(sapply(train, is.character))]
cat_var
train <- fread('../kaggle/house-price/data/train.csv',colClasses=c('MiscFeature' = "character", 'PoolQC' = 'character', 'Alley' = 'character'))
cat_var <- names(train)[which(sapply(train, is.character))]
cat_var
colSums(sapply(train, is.na)); # show NA count for each column
cat('Train has', dim(train)[1], 'rows and', dim(train)[2], 'columns.\n')
cat('Test has', dim(test)[1], 'rows and', dim(test)[2], ' columns.\n')
sum(is.na(train)) / (nrow(train) *ncol(train))
sum(is.na(test)) / (nrow(test) * ncol(test))
cat("The number of duplicated rows are", nrow(train) - nrow(unique(train)))
cat_var <- names(train)[which(sapply(train, is.character))]
cat_car <- c(cat_var, 'BedroomAbvGr', 'HalfBath', ' KitchenAbvGr','BsmtFullBath', 'BsmtHalfBath', 'MSSubClass')
train[,(cat_var) := lapply(.SD, as.factor), .SDcols = cat_var]
train_cat <- train[,.SD, .SDcols = cat_var]
train_cont <- train[,.SD,.SDcols = numeric_var]
doPlots(train_cat, fun = plotHist, ii = 1:4, ncol = 2)
doPlots(train_cat, fun = plotHist, ii  = 4:8, ncol = 2)
train <- fread('../kaggle/house-price/data/train.csv',colClasses=c('MiscFeature' = "character", 'PoolQC' = 'character', 'Alley' = 'character'))
train[,(cat_var) := lapply(.SD, as.factor), .SDcols = cat_var]
cat_var <- names(train)[which(sapply(train, is.character))]
cat_car <- c(cat_var, 'BedroomAbvGr', 'HalfBath', ' KitchenAbvGr','BsmtFullBath', 'BsmtHalfBath', 'MSSubClass')
train[,(cat_var) := lapply(.SD, as.factor), .SDcols = cat_var]
cat_var
train <- fread('../kaggle/house-price/data/train.csv',colClasses=c('MiscFeature' = "character", 'PoolQC' = 'character', 'Alley' = 'character'))
cat_var <- names(train)[which(sapply(train, is.character))]
cat_var
cat_car <- c(cat_var, 'BedroomAbvGr', 'HalfBath', ' KitchenAbvGr','BsmtFullBath', 'BsmtHalfBath', 'MSSubClass')
train[,(cat_var) := lapply(.SD, as.factor), .SDcols = cat_var]
train_cat <- train[,.SD, .SDcols = cat_var]
train_cont <- train[,.SD,.SDcols = numeric_var]
source('~/dev/ml/ml/kaggle/house-price/house-price.R', echo=TRUE)
analysisData()
train <- fread('../kaggle/house-price/data/train.csv',colClasses=c('MiscFeature' = "character", 'PoolQC' = 'character', 'Alley' = 'character'))
cat_var <- names(train)[which(sapply(train, is.character))]
cat_car <- c(cat_var, 'BedroomAbvGr', 'HalfBath', ' KitchenAbvGr','BsmtFullBath', 'BsmtHalfBath', 'MSSubClass')
train[,(cat_var) := lapply(.SD, as.factor), .SDcols = cat_var]
train_cat <- train[,.SD, .SDcols = cat_var]
numeric_var <- names(train)[which(sapply(train, is.numeric))]
train_cont <- train[,.SD,.SDcols = numeric_var]
doPlots(train_cat, fun = plotHist, ii = 1:4, ncol = 2)
doPlots(train_cat, fun = plotHist, ii  = 4:8, ncol = 2)
colSums(sapply(train, is.na)); # show NA count for each column
cat_var <- names(train)[which(sapply(train, is.character))]
cat_car <- c(cat_var, 'BedroomAbvGr', 'HalfBath', ' KitchenAbvGr','BsmtFullBath', 'BsmtHalfBath', 'MSSubClass')
train[,(cat_var) := lapply(.SD, as.factor), .SDcols = cat_var]
colSums(sapply(train, is.na)); # show NA count for each column
train <- fread('../kaggle/house-price/data/train.csv',colClasses=c('MiscFeature' = "character", 'PoolQC' = 'character', 'Alley' = 'character'))
colSums(sapply(train, is.na)); # show NA count for each column
cat_var <- names(train)[which(sapply(train, is.character))]
cat_var
train_cat <- train[,.SD, .SDcols = cat_var]
numeric_var <- names(train)[which(sapply(train, is.numeric))]
train_cont <- train[,.SD,.SDcols = numeric_var]
doPlots(train_cat, fun = plotHist, ii = 1:4, ncol = 2)
source('~/dev/ml/ml/kaggle/house-price/house-price.R', echo=TRUE)
cat_var <- names(train)[which(sapply(train, is.character))]
cat_var
source('~/dev/ml/ml/kaggle/house-price/house-price.R', echo=TRUE)
analysisData()
train <- fread('../kaggle/house-price/data/train.csv',colClasses=c('MiscFeature' = "character", 'PoolQC' = 'character', 'Alley' = 'character'))
test <- fread('../kaggle/house-price/data/test.csv' ,colClasses=c('MiscFeature' = "character", 'PoolQC' = 'character', 'Alley' = 'character'))
colSums(sapply(train, is.na)); # show NA count for each column
cat('Train has', dim(train)[1], 'rows and', dim(train)[2], 'columns.\n')
cat('Test has', dim(test)[1], 'rows and', dim(test)[2], ' columns.\n')
sum(is.na(train)) / (nrow(train) *ncol(train))
sum(is.na(test)) / (nrow(test) * ncol(test))
cat("The number of duplicated rows are", nrow(train) - nrow(unique(train)))
cat_var <- names(train)[which(sapply(train, is.character))]
cat_car <- c(cat_var, 'BedroomAbvGr', 'HalfBath', ' KitchenAbvGr','BsmtFullBath', 'BsmtHalfBath', 'MSSubClass')
train[,(cat_var) := lapply(.SD, as.factor), .SDcols = cat_var]
train_cat <- train[,.SD, .SDcols = cat_var]
numeric_var <- names(train)[which(sapply(train, is.numeric))]
train_cont <- train[,.SD,.SDcols = numeric_var]
doPlots(train_cat, fun = plotHist, ii = 1:4, ncol = 2)
doPlots(train_cat, fun = plotHist, ii  = 4:8, ncol = 2)
doPlots(train_cat, fun = plotHist, ii = 8:12, ncol = 2)
doPlots(train_cat, fun = plotHist, ii = 13:18, ncol = 2)
doPlots(train_cat, fun = plotHist, ii = 18:22, ncol = 2)
train %>% select(LandSlope, Neighborhood, SalePrice) %>%
filter(LandSlope == c('Sev', 'Mod')) %>% arrange(Neighborhood) %>%
group_by(Neighborhood, LandSlope) %>% summarize(Count = n()) %>%
ggplot(aes(Neighborhood, Count)) + geom_bar(aes(fill = LandSlope), position = 'dodge', stat = 'identity') + theme_light() +theme(axis.text.x = element_text(angle = 90, hjust =1))
train %>% select(Neighborhood, SalePrice) %>%
ggplot(aes(factor(Neighborhood), SalePrice)) +
geom_boxplot() + theme(axis.text.x = element_text(angle = 90, hjust =1)) +
xlab('Neighborhoods')
doPlots(train_cont, fun = plotDen, ii = 2:6, ncol = 2)
names(train_cat)
train_cat[[1]]
data.frame(train_cat[[1]])
d <- data.frame(train_cat[[1]])
head(d)
head(train_cat[[1]])
d <- data.frame(x=train_cat[[1]])
d
head(d)
colnames(train_cat)
colnames(train_cat)[1]
plotHist(train_cat, 1)
data
head(data)
ggplot(data=train_cat[[1]]) + geom_point()
ggplot(data=data.frame(x=train_cat[[1]]), aes(x=factor(x))) + geom_point()
ggplot(data=data.frame(x=train_cat[[1]]), aes(x=factor(x))) + +stat_count()
data <- data.frame(x=train_cat[[i]])
data <- data.frame(x=train_cat[[1]])
ggplot(data=data, aes(x=factor(x))) + stat_count()
ggplot(data=data, aes(x=factor(x))) + stat_count() + xlab(colnames(data_in)[i]) + theme_light()
ggplot(data=data, aes(x=factor(x))) + stat_count() + xlab(colnames(train_cat)[i]) + theme_light()
ggplot(data=data, aes(x=factor(x))) + stat_count() + xlab(colnames(train_cat)[1]) + theme_light()
ggplot(data=data, aes(x=factor(x))) + stat_count() + xlab(colnames(train_cat)[1])
ggplot(data=data, aes(x=factor(x))) + stat_count()
ggplot(data=data, aes(x=factor(x)))
help(stat_count)
nrow(data)
ggplot(data=data, aes(x=factor(x))) + stat_count()
names(data)
head(data)
flights[, .(.N), by = .(origin)]
data[, .(.N), by=.(x)]
as.data.table(data)[, .(.N), by=.(x)]
doPlots(train_cont, fun = plotDen, ii = 2:6, ncol = 2)
train_cont
doPlots(train_cont, fun = plotDen, ii = 2:6, ncol = 2)
library(e1071)
install.packages('e1071')
library(e1071)
doPlots(train_cont, fun = plotDen, ii = 2:6, ncol = 2)
doPlots(train_cont, fun = plotDen, ii = 7:12, ncol = 2)
doPlots(train_cont, fun = plotDen, ii = 13:17, ncol = 2)
doPlots(train_cont, fun = plotHist, ii = 18:23, ncol = 2)
source('~/dev/ml/ml/kaggle/house-price/house-price.R', echo=TRUE)
analysisData()
exploreCorrelation(train_cont);
install.packages('corrplot')
exploreCorrelation(train_cont);
library(corrplot)
exploreCorrelation(train_cont);
source('~/dev/ml/ml/kaggle/house-price/house-price.R', echo=TRUE)
str(train)
train[, colSums(is.na(train))>0]
train[, colSums(is.na(train))>0, with=false]
train[, colSums(is.na(train))>0, with=FALSE]
train[, colSums(is.na(train))>0]
train
train[, colSums(is.na(train))>0]
train[, colSums(is.na(train))>0, with=FALSE]
head(train)
colnames(train)
train[,colSums(is.na(train)>0)]
iris
colnames(iris)
head(iris)
nrow(iris)
source('~/dev/ml/ml/kaggle/house-price/house-price.R', echo=TRUE)
str(train)
train[, colNames(is.na(train))>0]
train[, colSums(is.na(train))>0]
d <- train[, colSums(is.na(train))>0]
temp_df <- as.data.frame(ifelse(is.na(d), 0,1))
temp_df
temp_df[, order(colSums(temp_df))]
colSums(temp_df)
order(colSums(temp_df))
plot_Missing(d)
d
d <- train[, is_na(train) > 0, with=FALSE]
d <- train[, colSums(is_na(train)) > 0, with=FALSE]
d <- train[, colSums(is.na(train)) > 0, with=FALSE]
plot_Missing(d)
d <- train[, colSums(is.na(train)) > 0, with=TRUE]
plot_Missing(d)
temp_df <- as.data.frame(ifelse(is.na(d), 0,1))
temp_df
order(colSums(temp_df))
d <- train[, colSums(is.na(train)) > 0, with=FALSE]
temp_df <- as.data.frame(ifelse(is.na(d), 0,1))
order(colSums(temp_df))
temp_df
d <- train[, colSums(is.na(train)) > 0, with=TRUE]
as.data.frame(ifelse(is.na(d), 0,1))
d <- train[, colSums(is.na(train)) > 0, with=FALSE]
as.data.frame(ifelse(is.na(d), 0,1))
temp_df <- as.data.frame(ifelse(is.na(d), 0,1))
temp_df
colSums(temp_df)
order(colSums(temp_df))
colSums(temp_df)
temp_df
temp_df <- temp_df[,order(colSums(temp_df))]
temp_df
data_temp <- expand.grid(list(x = 1:nrow(temp_df), y = colnames(temp_df)))
data_temp
names(data_temp)
head(data_temp)
colnames(temp_df)
temp_df
as.atrix(temp_df)
as.matrix(temp_df)
source('~/dev/ml/ml/kaggle/house-price/house-price.R', echo=TRUE)
sapply(train, is.character)
which(sapply(train, is.character))
names(train)[which(sapply(train, is.character))]
colSums(sapply(train, is.na))
is.na(train)
sum(is.na(train))
train <- fread('../kaggle/house-price/data/train.csv',colClasses=c('MiscFeature' = "character", 'PoolQC' = 'character', 'Alley' = 'character'))
which(sapply(train, is.character))
which(sapply(train, is.character))
sapply(train, is.character)
which(sapply(train, is.character))
sapply(train, is.character)
which(sapply(train, is.character))
help(which)
names(which(sapply(train, is.character))_
names(which(sapply(train, is.character)))
sapply(train, is.character)
names(sapply(train, is.character))
names(which(sapply(train, is.character)))
sapply(train, is.character)
d <- data.table(x=c(1:10), y=c(1:10))
d
sapply(d, is.numeric)
which(sapply(d, is.numeric))
d <- data.table(x=c(1:10), y=c(1:10), z=c(a:z))
d <- data.table(x=c(1:10), y=c(1:10), z=c("a":"z"))
d
d <- data.table(x=c(1:10), y=c(1:10), z=c("a":"j"))
d <- data.table(x=c(1:10), y=c(1:10), z=c(letters("a","j")))
help(letters)
d <- data.table(x=c(1:10), y=c(1:10), z=LETTERS[seq( from = 1, to = 10 )])
d
sapply(d, is.numeric)
d
d[1]
d[1][3]
d[1,3]
d[3,3]
d[3,3] <- 3
d
sapply(d, is.numeric)
which(sapply(d, is.numeric))
which(sapply(train, is.character))
names(train)[which(sapply(train, is.character))]
cat_var <- names(train)[which(sapply(train, is.character))]
cat_car <- c(cat_var, 'BedroomAbvGr', 'HalfBath', ' KitchenAbvGr','BsmtFullBath', 'BsmtHalfBath', 'MSSubClass')
doPlots(train_cat, fun = plotHist, ii = 1:4, ncol = 2)
library(grid)
doPlots(train_cat, fun = plotHist, ii = 1:4, ncol = 2)
library(grid)
doPlots(train_cat, fun = plotHist, ii = 1:4, ncol = 2)
library(grid.arrange)
library(gridExtra)
library(dplyr)
doPlots(train_cat, fun = plotHist, ii = 1:4, ncol = 2)
cat_car
train[, cat_car]
train[, .SD, .SDcols=cat_var]
d
d[,1]
d[,c(1,2)]
train[,1]
train[,c=cat_car]
cat_car
train[,cat_car]
train[,c(1,2)]
d[,c('x','y')]
cat_car
typeof(cat_car)
c(1,2)
length(cat_car)
length(c(1,2))
c <- c(1,2)
d[,c]
d[[c]]
d
d[[1]]
d[1,]
d[,1]
train_cat <- train[,.SD, .SDcols = cat_var]
train_cat
names(train_cat)
train[[1]]
ggplot(data=train_cat[[1]], aes(x=factor(x))) + stat_count()
library(ggplot2)
ggplot(data=train_cat[[1]], aes(x=factor(x))) + stat_count()
str(train_cat)
str(train_cat[[1]])
df <- data.frame(x=train_cat[[1]])
str(df)
ggplot(data=df, aes(x=factor(x))) + stat_count()
str(train)
train <- fread('../kaggle/house-price/data/train.csv',colClasses=c('MiscFeature' = "character", 'PoolQC' = 'character', 'Alley' = 'character'))
str(train)
colnames(trains)
colnames(train)
length(colnames(train))
dim(train)
sapply(train, is.character)
length(sapply(train, is.character))
length(which(sapply(train, is.character)))
length(which(sapply(train, !is.character)))
length(which(sapply(train, is.numeric)))
which(sapply(train, !is.character))
which(sapply(train, is.character))
colnames(train)[which(sapply(train, is.character))]
colnames(train)[which(apply(train, is.numeric))]
colnames(train)[which(sapply(train, is.numeric))]
numColumns <- colnames(train)[which(sapply(train, is.numeric))]
numColumns
numTrain <- train[, .SD, .SDcols=numColumns]
numTrain
length(names(numTrain))
length(numColumns)
numTrain <- train[, .SD, .SDcols=numColumns]
charTrain <- train[, .SD, .SDcols=charColumns]
charColumns <- colnames(train)[which(sapply(train, is.character))]
charTrain <- train[, .SD, .SDcols=charColumns]
df <- data.frame(value=charTrain[[1]])
ggplot(data=df, aes(x=factor(value))) + stat_count()
colnames(charTrain)
colnames(charTrain)[1]
charTrain[[1]]
unique(charTrain[[1]])
train <- fread('../kaggle/house-price/data/train.csv',colClasses=c('MiscFeature' = "character", 'PoolQC' = 'character', 'Alley' = 'character'))
source('~/dev/ml/ml/kaggle/house-price/house-price.R', echo=TRUE)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
library(dplyr)
library(e1071)
library(corrplot)
source('~/dev/ml/ml/kaggle/house-price/house-price.R', echo=TRUE)
dim(train)
sapply(train, is.character)
which(sapply(train, is.character))
train <- fread('../kaggle/house-price/data/train.csv',colClasses=c('MiscFeature' = "character", 'PoolQC' = 'character', 'Alley' = 'character'))
which(sapply(train, is.character))
names(train)[which(sapply(train, is.character))]
charTrain <- train[, names(train)[which(sapply(train, as.character))]]
charTrain <- train[, names(train)[which(sapply(train, is.character))]]
charTrain
numTrain <- train[, names(train)[which(sapply(train, is.numeric))]]
numTrain
colnames(train)
train[,1]
train[,Id]
colnames(train)
train[,c("Id", "YrSold")]
numTrain <- train[, names(train)[which(sapply(train, is.numeric))]]
numTrain
numTrain[,1]
numTrain[1]
numTrain[2]
charColumns <- names(train)[which(sapply(train, is.character))]
charColumns
numColumns <- names(train)[which(sapply(train, is.numeric))]
numColumns
train[, .SD, .SDcols=charTrain]
train[, .SD, .SDcols=charColumns]
charTrain <- train[, .SD, .SDcols=charColumns]
numTrain <- train[, .SD, .SDcols = numColumns]
numTrain
df <- data.frame(value=charTrain[[1]])
ggplot(df ,aes(x=factor(value))) + stat_count()
charTrain[[1]]
charTrain[[1]]['RL']
charTrain[[1]]
df
df[value='RL']
names(df)
df[,value='RL']
df$value
df[df$value='RL']
df[df$value=='RL']
df[value == 'RL']
df[,df$value=='RL']
df[df['value']=='RL']
length(df[df['value']=='RL'])
length(df[df['value']=='C'])
length(df[df['value']=='FV'])
length(df[df['value']=='C(all)'])
length(df[df['value']=='C (all)'])
length(df[df['value']=='RM'])
length(df[df['value']=='RH'])
analysisData()
library(gridExtra)
analysisData()
train <- fread('../kaggle/house-price/data/train.csv',colClasses=c('MiscFeature' = "character", 'PoolQC' = 'character', 'Alley' = 'character'))
analysisData()
df
ggplot(data=df, aes(x=factor(x))) + stat_count()
ggplot(data=df, aes(x=factor(value))) + stat_count()
ggplot(data=df, aes(x=value) + stat_count()
ggplot(data=df, aes(x=factor(value))) + stat_count() + xlab('xxx')
ggplot(data=df, aes(x=factor(value))) + stat_count() + xlab(colnames(df))
ggplot(data=df, aes(x=factor(value))) + stat_count() + xlab('aa')
ggplot(data=df, aes(x=factor(value))) + stat_count() + xlab('xxxx')
ggplot(data=df, aes(x=factor(value))) + stat_count() + xlab(colnames(df))
ggplot(data=df, aes(x=factor(value))) + stat_count()
ggplot(data=df, aes(x=factor(value))) + stat_count() + xlab(colnames(df)) + theme_light()
ggplot(data=df, aes(x=factor(value))) + stat_count() + xlab(colnames(df)) + theme_light() + theme(axis.text.x = element_text(angle = 90, hjust =1))
ggplot(data=df, aes(x=factor(value))) + stat_count() + xlab(colnames(df)) + theme_light()
ggplot(data=df, aes(x=factor(value))) + stat_count() + xlab(colnames(df)) + theme_light() + theme(axis.text.x = element_text(angle = 90, hjust =1))
names(charTrain)
ndf <- data.frame(Neighborhood=charTrain[['Neighborhood']])
ndf
ggplot(data=ndf, aex(x=factor(Neighborhood))) + stat_count()
ggplot(data=ndf, aes(x=factor(Neighborhood))) + stat_count()
ndf <- data.frame(Neighborhood=charTrain[['Neighborhood']])
ggplot(data=ndf, aes(x=Neighborhood)) + stat_count()
ggplot(data=ndf, aes(x=Neighborhood)) + stat_count() + xlab(colnames(ndf))  + theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust =1))
ggplot(data=df) + geom_line(aes(x=x), stat='density', size=1, alpha=1.0)
den <- data.frame(x=numTrain[[1]], SalePrice=numTrain$SalePrice)
ggplot(data=den) + geom_line(aes(x=x), stat='density', size=1, alpha=1.0)
names(numTrain)
den <- data.frame(x=numTrain[['MSSubClass']], SalePrice=numTrain$SalePrice)
ggplot(data=den) + geom_line(aes(x=x), stat='density', size=1, alpha=1.0)
den <- data.frame(x=numTrain[['MSSubClass']], y=numTrain9[['PoolArea']], SalePrice=numTrain$SalePrice)
den <- data.frame(x=numTrain[['MSSubClass']], y=numTrain[['PoolArea']], SalePrice=numTrain$SalePrice)
ggplot(data=den) + geom_line(aes(x=x), stat='density', size=1, alpha=1.0)
ggplot(data=den) + geom_line(aes(x=x), stat='density', size=1, alpha=1.0) + geom_line(aes(y=y))
ggplot(data=den) + geom_line(aes(x=x), stat='density', size=1, alpha=1.0) + geom_line(aes(y=y), stat='density', size=1)
ggplot(data=den) + geom_line(aes(x=x), stat='density', size=1, alpha=1.0) + geom_line(aes(x=y), stat='density', size=1)
ggplot(data=den) + geom_line(aes(x=x), stat='density', size=1, alpha=1.0) + geom_line(aes(x=y), stat='density', size=1, col='red')
den <- data.frame(x=numTrain[['MSSubClass']],  SalePrice=numTrain$SalePrice)
ggplot(data=den) + geom_line(aes(x=x), stat='density', size=1, alpha=1.0)
ggplot(data=den) + geom_line(aes(x='MSSubClass'), stat='density', size=1, alpha=1.0)
ggplot(data=den) + geom_line(aes(x=x), stat='density', size=1, alpha=1.0)
ggplot(data=den) + geom_line(aes(x=x), stat='density', size=1, alpha=1.0) + xlab(colnames(den))
colnames(den)
ggplot(data=den) + geom_line(aes(x=x), stat='density', size=1, alpha=1.0) + xlab('MSSubClass')
source('~/dev/ml/ml/kaggle/house-price/house-price.R', echo=TRUE)
train <- fread('../kaggle/house-price/data/train.csv',colClasses=c('MiscFeature' = "character", 'PoolQC' = 'character', 'Alley' = 'character'))
test <- fread('../kaggle/house-price/data/test.csv' ,colClasses=c('MiscFeature' = "character", 'PoolQC' = 'character', 'Alley' = 'character'))
sapply(train, is.character)
which(sapply(train, is.character))
names(trains)[which(sapply(train, is.character))]
names(train)[which(sapply(train, is.character))]
cat_var <- names(train)[which(sapply(train, is.character))]
train_cat <- train[, .SD, .SDcols = cat_var]
doPlots(train_cat, fun = plotHist, ii = 1:4, ncol = 2)
names(cat_var)
names(train_cat)
train_cat[,HouseStyle]
train_cat[[HouseStyle]]
train_cat[['HouseStyle']]
df <- data.frame(value=train_cat[['HouseStyle']])
ggplot(data=df, aes(x=value)) + stat_count()
source('~/dev/ml/ml/kaggle/house-price/house-price.R', echo=TRUE)
train_cont
correlations
help cor
help(cor)
train <- fread('../kaggle/house-price/data/train.csv',colClasses=c('MiscFeature' = "character", 'PoolQC' = 'character', 'Alley' = 'character'))
cat_var <- names(train)[which(sapply(train, is.character))]
cat_car <- c(cat_var, 'BedroomAbvGr', 'HalfBath', ' KitchenAbvGr','BsmtFullBath', 'BsmtHalfBath', 'MSSubClass')
train[,(cat_var) := lapply(.SD, as.factor), .SDcols = cat_var]
train_cat <- train[,.SD, .SDcols = cat_var]
numeric_var <- names(train)[which(sapply(train, is.numeric))]
train_cont <- train[,.SD,.SDcols = numeric_var]
train_cont[,-1]
names(train_cont)
train_cont[,1]
train_cont[,-1]
train_cont[,-1, with=FALSE]
na.omit(train_cont[,-1, with = FALSE])
cor(train_cont)
source('~/dev/ml/ml/kaggle/house-price/house-price.R', echo=TRUE)
head(coorelations)
correlations <- cor(na.omit(train_cont[,-1, with = FALSE]))
head(coorelations)
head(correlations)
row_indic <- apply(correlations, 1, function(x) sum(x > 0.3 | x < -0.3) > 1)
row_indic
correlations[row_indic ,row_indic ]
names(correlations[,'SalePrice'])
str(correlations)
correlations
correlations[, 'SalePrice']
result <- linearRegression()
result
colnames(train)
source('~/dev/ml/ml/kaggle/house-price/house-price.R', echo=TRUE)
result <- linearRegression()
r <- data.frame(Id = test$Id, SalePrice = result)
write.csv(r, file="~/tmp/house-price.csv", row.names = FALSE)
result[is.na]
typeof(result)
result[0]
result
result[1]
result[is.na==TRUE]
is.na(result)
result[is.na(result)]
result[is.na(result)] <- mean(result)
result[[661]]
result[is.na(result)]
result[is.na(result)] <- mean(result, na.rm = TRUE)
result[[661]]
write.csv(r, file="~/tmp/house-price.csv", row.names = FALSE)
write.csv(result, file="~/tmp/house-price.csv", row.names = FALSE)
r <- data.frame(Id = test$Id, SalePrice = result)
write.csv(r, file="~/tmp/house-price.csv", row.names = FALSE)
result[result<0]
result[result<0] <- mean(result)
result[result<0]
r <- data.frame(Id = test$Id, SalePrice = result)
write.csv(r, file="~/tmp/house-price.csv", row.names = FALSE)
